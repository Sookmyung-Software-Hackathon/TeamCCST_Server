{"version":3,"sources":["../../src/error/MetadataAlreadyExistsError.ts"],"names":[],"mappings":";;;;AAAA,+CAA4C;AAE5C;IAAgD,2DAAY;IACxD,oCAAY,YAAoB,EAAE,WAAqB,EAAE,YAAqB;eAC1E,kBACI,YAAY,GAAG,qDAAqD,GAAG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAClG,CAAC,YAAY,CAAC,CAAC,CAAC,eAAe,GAAG,YAAY,CAAC,CAAC,CAAC,8DAA8D;gBAC3G,iGAAiG,CAAC,CACzG;IACL,CAAC;IACL,iCAAC;AAAD,CARA,AAQC,CAR+C,2BAAY,GAQ3D;AARY,gEAA0B","file":"MetadataAlreadyExistsError.js","sourcesContent":["import {TypeORMError} from \"./TypeORMError\";\n\nexport class MetadataAlreadyExistsError extends TypeORMError {\n    constructor(metadataType: string, constructor: Function, propertyName?: string) {\n        super(\n            metadataType + \" metadata already exists for the class constructor \" + JSON.stringify(constructor) +\n            (propertyName ? \" on property \" + propertyName : \". If you previously renamed or moved entity class, make sure\" +\n                \" that compiled version of old entity class source wasn't left in the compiler output directory.\")\n        );\n    }\n}\n"],"sourceRoot":".."}