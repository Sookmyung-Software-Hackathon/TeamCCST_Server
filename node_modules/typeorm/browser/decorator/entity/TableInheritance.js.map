{"version":3,"sources":["../browser/src/decorator/entity/TableInheritance.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,sBAAsB,EAAC,MAAM,eAAe,CAAC;AAIrD;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,OAAsE;IACnG,OAAO,UAAU,MAAgB;QAE7B,sBAAsB,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC;YACvC,MAAM,EAAE,MAAM;YACd,OAAO,EAAE,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;YAC7D,MAAM,EAAE,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;SACtG,CAAC,CAAC;IAClC,CAAC,CAAC;AACN,CAAC","file":"TableInheritance.js","sourcesContent":["import {getMetadataArgsStorage} from \"../../globals\";\nimport {InheritanceMetadataArgs} from \"../../metadata-args/InheritanceMetadataArgs\";\nimport {ColumnOptions} from \"../options/ColumnOptions\";\n\n/**\n * Sets for entity to use table inheritance pattern.\n */\nexport function TableInheritance(options?: { pattern?: \"STI\"/*|\"CTI\"*/, column?: string|ColumnOptions }): ClassDecorator {\n    return function (target: Function) {\n\n        getMetadataArgsStorage().inheritances.push({\n            target: target,\n            pattern: options && options.pattern ? options.pattern : \"STI\",\n            column: options && options.column ? typeof options.column === \"string\" ? { name: options.column } : options.column : undefined\n        } as InheritanceMetadataArgs);\n    };\n}\n"],"sourceRoot":"../.."}