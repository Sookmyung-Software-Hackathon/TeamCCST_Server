{"version":3,"sources":["../browser/src/error/UsingJoinTableIsNotAllowedError.ts"],"names":[],"mappings":";AAEA,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;IAAqD,mDAAY;IAC7D,yCAAY,cAA8B,EAAE,QAA0B;eAClE,kBACI,wBAAsB,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,gBAAa;aAC5E,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,YAAY,gBAAa,CAAA;YACzF,+DAA+D,CAClE;IACL,CAAC;IACL,sCAAC;AAAD,CARA,AAQC,CARoD,YAAY,GAQhE","file":"UsingJoinTableIsNotAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\nimport {TypeORMError} from \"./TypeORMError\";\n\nexport class UsingJoinTableIsNotAllowedError extends TypeORMError {\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super(\n            `Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n            `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` +\n            `however you can use JoinTable only on many-to-many relations.`\n        );\n    }\n}\n"],"sourceRoot":".."}