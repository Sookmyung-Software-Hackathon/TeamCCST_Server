{"version":3,"sources":["../browser/src/error/UsingJoinColumnIsNotAllowedError.ts"],"names":[],"mappings":";AAEA,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;IAAsD,oDAAY;IAC9D,0CAAY,cAA8B,EAAE,QAA0B;eAClE,kBACI,yBAAuB,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,gBAAa;YAChF,sEAAsE,CACzE;IACL,CAAC;IACL,uCAAC;AAAD,CAPA,AAOC,CAPqD,YAAY,GAOjE","file":"UsingJoinColumnIsNotAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\nimport {TypeORMError} from \"./TypeORMError\";\n\nexport class UsingJoinColumnIsNotAllowedError extends TypeORMError {\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super(\n            `Using JoinColumn on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n            `You can use JoinColumn only on one-to-one and many-to-one relations.`\n        );\n    }\n}\n"],"sourceRoot":".."}