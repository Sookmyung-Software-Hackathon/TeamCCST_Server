{"version":3,"sources":["../browser/src/error/UsingJoinTableOnlyOnOneSideAllowedError.ts"],"names":[],"mappings":";AAEA,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;IAA6D,2DAAY;IACrE,iDAAY,cAA8B,EAAE,QAA0B;eAClE,kBACI,gFAAgF;aAChF,UAAQ,cAAc,CAAC,IAAI,SAAI,QAAQ,CAAC,YAAY,aAAQ,QAAQ,CAAC,qBAAqB,CAAC,IAAI,SAAI,QAAQ,CAAC,eAAgB,CAAC,YAAY,MAAG,CAAA;YAC5I,wFAAwF,CAC3F;IACL,CAAC;IACL,8CAAC;AAAD,CARA,AAQC,CAR4D,YAAY,GAQxE","file":"UsingJoinTableOnlyOnOneSideAllowedError.js","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\nimport {TypeORMError} from \"./TypeORMError\";\n\nexport class UsingJoinTableOnlyOnOneSideAllowedError extends TypeORMError {\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super(\n            `Using JoinTable is allowed only on one side of the many-to-many relationship. ` +\n            `Both ${entityMetadata.name}#${relation.propertyName} and ${relation.inverseEntityMetadata.name}#${relation.inverseRelation!.propertyName} ` +\n            `has JoinTable decorators. Choose one of them and left JoinColumn decorator only on it.`\n        );\n    }\n}\n"],"sourceRoot":".."}