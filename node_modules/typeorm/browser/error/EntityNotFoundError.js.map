{"version":3,"sources":["../browser/src/error/EntityNotFoundError.ts"],"names":[],"mappings":";AACA,OAAO,EAAC,YAAY,EAAC,MAAM,+BAA+B,CAAC;AAC3D,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;;GAEG;AACH;IAAyC,uCAAY;IACjD,6BAAY,WAA8B,EAAE,QAAa;QAAzD,YACI,iBAAO,SAIV;QAFG,KAAI,CAAC,OAAO,GAAG,yCAAsC,KAAI,CAAC,eAAe,CAAC,WAAW,CAAC,QAAI;aACtF,eAAa,KAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAG,CAAA,CAAC;;IACxD,CAAC;IAEO,6CAAe,GAAvB,UAAwB,MAAyB;QAC7C,IAAI,MAAM,YAAY,YAAY,EAAE;YAChC,OAAO,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;SAC9B;aAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE;YACrC,OAAO,MAAM,CAAC,IAAI,CAAC;SACtB;aAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,IAAI,MAAM,EAAE;YACvD,OAAO,MAAM,CAAC,IAAI,CAAC;SACtB;aAAM;YACH,OAAO,MAAM,CAAC;SACjB;IACL,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,QAAa;QACnC,IAAI;YACA,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SAC5C;QAAC,OAAO,CAAC,EAAE,GAAG;QACf,OAAO,EAAE,GAAG,QAAQ,CAAC;IACzB,CAAC;IACL,0BAAC;AAAD,CA1BA,AA0BC,CA1BwC,YAAY,GA0BpD","file":"EntityNotFoundError.js","sourcesContent":["import {EntityTarget} from \"../common/EntityTarget\";\nimport {EntitySchema} from \"../entity-schema/EntitySchema\";\nimport {TypeORMError} from \"./TypeORMError\";\n\n/**\n * Thrown when no result could be found in methods which are not allowed to return undefined or an empty set.\n */\nexport class EntityNotFoundError extends TypeORMError {\n    constructor(entityClass: EntityTarget<any>, criteria: any) {\n        super();\n\n        this.message = `Could not find any entity of type \"${this.stringifyTarget(entityClass)}\" ` +\n            `matching: ${this.stringifyCriteria(criteria)}`;\n    }\n\n    private stringifyTarget(target: EntityTarget<any>): string {\n        if (target instanceof EntitySchema) {\n            return target.options.name;\n        } else if (typeof target === \"function\") {\n            return target.name;\n        } else if (typeof target === \"object\" && \"name\" in target) {\n            return target.name;\n        } else {\n            return target;\n        }\n    }\n\n    private stringifyCriteria(criteria: any): string {\n        try {\n            return JSON.stringify(criteria, null, 4);\n        } catch (e) { }\n        return \"\" + criteria;\n    }\n}\n"],"sourceRoot":".."}