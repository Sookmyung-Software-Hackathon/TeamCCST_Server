{"version":3,"sources":["../browser/src/error/FindRelationsNotFoundError.ts"],"names":[],"mappings":";AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,gBAAgB,CAAC;AAE5C;;EAEE;AACF;IAAgD,8CAAY;IACxD,oCAAY,iBAA2B;QAAvC,YACI,iBAAO,SAOV;QALG,IAAI,iBAAiB,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,KAAI,CAAC,OAAO,GAAG,gBAAa,iBAAiB,CAAC,CAAC,CAAC,sFAAkF,CAAC;SACtI;aAAM;YACH,KAAI,CAAC,OAAO,GAAG,eAAa,iBAAiB,CAAC,GAAG,CAAC,UAAA,QAAQ,IAAI,OAAA,OAAI,QAAQ,OAAG,EAAf,CAAe,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,4FAAyF,CAAC;SACtL;;IACL,CAAC;IACL,iCAAC;AAAD,CAVA,AAUC,CAV+C,YAAY,GAU3D","file":"FindRelationsNotFoundError.js","sourcesContent":["import {TypeORMError} from \"./TypeORMError\";\n\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\nexport class FindRelationsNotFoundError extends TypeORMError {\n    constructor(notFoundRelations: string[]) {\n        super();\n\n        if (notFoundRelations.length === 1) {\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`;\n        } else {\n            this.message = `Relations ${notFoundRelations.map(relation => `\"${relation}\"`).join(\", \")} were not found; please check if relations are correct and they exist in your entities.`;\n        }\n    }\n}\n"],"sourceRoot":".."}