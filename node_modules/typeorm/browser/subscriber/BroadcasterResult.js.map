{"version":3,"sources":["../browser/src/subscriber/BroadcasterResult.ts"],"names":[],"mappings":";AAAA;;GAEG;AACH;IAAA;QAEI;;WAEG;QACH,UAAK,GAAW,CAAC,CAAC;QAElB;;WAEG;QACH,aAAQ,GAAmB,EAAE,CAAC;IAYlC,CAAC;IAVG;;OAEG;IACG,gCAAI,GAAV;;;;;6BACQ,CAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAA,EAAxB,wBAAwB;wBACxB,qBAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAA;;wBAAhC,SAAgC,CAAC;;4BAGrC,sBAAO,IAAI,EAAC;;;;KACf;IACL,wBAAC;AAAD,CAtBA,AAsBC,IAAA","file":"BroadcasterResult.js","sourcesContent":["/**\n * Broadcaster execution result - promises executed by operations and number of executed listeners and subscribers.\n */\nexport class BroadcasterResult {\n\n    /**\n     * Number of executed listeners and subscribers.\n     */\n    count: number = 0;\n\n    /**\n     * Promises returned by listeners and subscribers which needs to be awaited.\n     */\n    promises: Promise<any>[] = [];\n\n    /**\n     * Wait for all promises to settle\n     */\n    async wait(): Promise<BroadcasterResult> {\n        if (this.promises.length > 0) {\n            await Promise.all(this.promises);\n        }\n\n        return this;\n    }\n}\n"],"sourceRoot":".."}