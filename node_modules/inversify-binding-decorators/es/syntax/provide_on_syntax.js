import ProvideWhenSyntax from "./provide_when_syntax";
import ProvideDoneSyntax from "./provide_done_syntax";
var ProvideOnSyntax = /** @class */ (function () {
    function ProvideOnSyntax(bindingOnSyntax, provideDoneSyntax) {
        this._bindingOnSyntax = bindingOnSyntax;
        this._provideDoneSyntax = provideDoneSyntax;
    }
    ProvideOnSyntax.prototype.onActivation = function (fn) {
        var _this = this;
        var bindingWhenSyntax = function (bind, target) { return _this._bindingOnSyntax(bind, target).onActivation(fn); };
        var onDoneSyntax = new ProvideDoneSyntax(bindingWhenSyntax);
        return new ProvideWhenSyntax(bindingWhenSyntax, onDoneSyntax);
    };
    ProvideOnSyntax.prototype.done = function (force) {
        return this._provideDoneSyntax.done(force);
    };
    return ProvideOnSyntax;
}());
export default ProvideOnSyntax;
